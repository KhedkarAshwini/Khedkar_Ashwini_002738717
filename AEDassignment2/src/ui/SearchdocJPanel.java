/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import datamodel.DataManager;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;


import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.*;

/**
 *
 * @author ashwini
 */
public class SearchdocJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchdocJPanel
     */
    HospitalDirectory hospital;
    Encounter encounter;
    JPanel cards;
    CardLayout cl;
    
    public SearchdocJPanel(Encounter enc , JPanel cards) {
        this.encounter = enc;
        this.cards = cards;
        this.cl = (CardLayout) cards.getLayout();
        initComponents();
        addListeners();
    }
    
    private void addListeners() {
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = jTable1.rowAtPoint(evt.getPoint());
                if(row > -1)
                {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                int DoctorId = (Integer) model.getValueAt(row, 1);
                encounter.doctor = DataManager.shared.doctors.fetchDoctor(DoctorId);
                
                }
            }     
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        searchField = new javax.swing.JTextField();
        sbyIDButton = new javax.swing.JButton();
        searchLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Find a Doctor");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select", "DoctorName", "HospitalName", "Zipcode" }));

        sbyIDButton.setBackground(new java.awt.Color(51, 0, 255));
        sbyIDButton.setText("Search");
        sbyIDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbyIDButtonActionPerformed(evt);
            }
        });

        searchLabel.setText("Search by :");

        jButton1.setBackground(new java.awt.Color(51, 0, 255));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor Name", "Doctor ID", "Age", "Gender", "Contact", "Email", "Address", "City", "Zip", "HospitalName"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTabbedPane1.addTab("Doctor Table ", jScrollPane1);

        jButton2.setBackground(new java.awt.Color(51, 51, 255));
        jButton2.setText("Request Appointment ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sbyIDButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(446, 446, 446))
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchLabel)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sbyIDButton)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sbyIDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbyIDButtonActionPerformed
        // TODO add your handling code here:

        String selectedfield = jComboBox1.getSelectedItem().toString();
        int rowindex = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        System.out.println(selectedfield);
        
        
        
        if(selectedfield.equals("DoctorName")){
            String name = searchField.getText();
            searchbyName(name);
            searchField.setText("");


        }
        else if(selectedfield.equals("HospitalName")){
            String name = searchField.getText();
            searchbyHospitalName(name);
            searchField.setText("");
        }
        else if(selectedfield.equals("Zipcode")){
            String name = searchField.getText();
            searchbyZipCode(name);
            searchField.setText("");
        }
        else{
            JOptionPane.showMessageDialog(this, "Please enter value to search.");
        }         
    }//GEN-LAST:event_sbyIDButtonActionPerformed
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        cl.previous(cards);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
            cards.remove(cards.getComponentCount()-1);
            cards.remove(cards.getComponentCount()-1);
            cl.show(cards, "PPanel");
            JOptionPane.showMessageDialog(this,"Appointment Booked successfully");
        
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton sbyIDButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchLabel;
    // End of variables declaration//GEN-END:variables

    private void searchbyName(String name) {
        ArrayList<Doctor> doctors = new ArrayList<>();
        for (Doctor doc:DataManager.shared.doctors.getDoctor()){
                System.out.println("test "+doc.getName()+" "+name);
                if(doc.getName().equals(name)){
                    doctors.add(doc);
                    
                }
                
            }
        PopulateTable(doctors);
        //doctors.clear();
    }

    private void searchbyHospitalName(String name) {
        
        PopulateTable(DataManager.shared.doctors.fetchDoctorbyHosName(name));
        
    }

    private void searchbyZipCode(String zip) {
        
        ArrayList<Doctor> docs = new ArrayList<>();
        for (Hospital hos:DataManager.shared.hospitals.fetchHospitalbyZipCode(zip)){
                docs.addAll(DataManager.shared.doctors.fetchDoctorbyHosName(hos.getHosname()));
            }
        PopulateTable(docs);
        //docs.clear();
    }

    private void PopulateTable(ArrayList<Doctor> doctors) {
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
      
        
        for(Doctor doc: doctors){
            
        
        Object[] row = new Object[10];
        int eid = 0;
        row[0] = doc.getName();
        if(doc.getId() == 0){
            row[1] = eid++;
        }
        else{
            row[1] = doc.getId();
        }
        row[2] = doc.getAge();
        row[3] = doc.getGender();
        row[4] = doc.getContact();
        row[5] = doc.getEmail();
        row[6] = doc.getAddress();
        row[7] = doc.getCity();
        row[8] = doc.getZip();
        row[9] = doc.getHospname();
        

        model.addRow(row);
        }
        
}
    

}
